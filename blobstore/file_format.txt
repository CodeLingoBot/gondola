The structure of the files stored by blobstore is described in this document.

Each stored file generates 2 files.

<id>: The raw file, as provided to the blobstore
<id>.meta: The metadata file, with the following format:

Header (9 bytes):

version (uint8) | flags (uint64)

version: currently always 1
flags: reserved for future use

Then the metadata metadata follows, using the following format:

metadata size (uint64) | fnv64a metadata (uint64)

Then comes the data metadata, in the same format:

data size (uint64) |Â fnv64a data (uint64)

Finally, the metadata is appended to the file. Thus, the metadata in the .meta
can be found at 9 + (2 * (8 + 8)) = 25 bytes offset.

The metadata provided by the user is stored as a BSON-encoded document.

If any size or fnv don't match what's recoreded, the file
should be considered as corrupted.

Each file is assigned a BSON id, which consists of 24 hexadecimal characters and
usually will be automatically generated by the library, but can be provided by
the caller.

The filesystem backend stores files in xx/yyyyyyyyyyyyyyyyyyyyyy where xx are the last 2 characters
of the id and the y's are the rest of the id. The reason the first two characters are not
used is because BSON ids start with the timestamp, so choosing those two bytes would
not provide a good distribution of the files between the different directories.
