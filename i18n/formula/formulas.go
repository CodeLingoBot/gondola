package formula

// THIS FILE IS AUTOGENERATED. DO NOT EDIT IT MANUALLY
// Use go run make_formulas.go to update it

func getFormula(id uint64) Formula {
	switch id {
	case 8465697497647601086:
		return formula0
	case 3753313464659768535:
		return formula1
	case 9743606014205963192:
		return formula2
	case 8353331394646132262:
		return formula3
	case 482474810900796741:
		return formula4
	case 3794377155962162086:
		return formula5
	case 8236062260750903661:
		return formula6
	case 3819618712950158305:
		return formula7
	case 17135076958182321495:
		return formula8
	case 11306730363135166126:
		return formula9
	case 13203717097043806955:
		return formula10
	case 12250617226767911105:
		return formula11
	case 12497748465301699578:
		return formula12
	case 7242280884330115815:
		return formula13
	case 2921744522093718907:
		return formula14
	case 1850486709935878788:
		return formula15
	case 8091386089892711711:
		return formula16
	case 9284432213023049903:
		return formula17
	case 6087668853982681023:
		return formula18
	case 16904634613988836891:
		return formula19

	}
	return nil
}

// nplurals=1; plural=0;
func formula0(n int) int {

	return 0
}

// nplurals=2; plural=(n != 0);
func formula1(n int) int {
	if n != 0 {
		return 1
	}
	return 0
}

// nplurals=2; plural=(n != 1);
func formula2(n int) int {
	if n != 1 {
		return 1
	}
	return 0
}

// nplurals=2; plural=(n > 1);
func formula3(n int) int {
	if n > 1 {
		return 1
	}
	return 0
}

// nplurals=2; plural=(n%10!=1 || n%100==11);
func formula4(n int) int {
	if n%10 != 1 || n%100 == 11 {
		return 1
	}
	return 0
}

// nplurals=2; plural=n==1 || n%10==1 ? 0 : 1;
func formula5(n int) int {
	if n == 1 || n%10 == 1 {
		return 0
	}

	return 1
}

// nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : 2);
func formula6(n int) int {
	if n%10 == 1 && n%100 != 11 {
		return 0
	}
	if n != 0 {
		return 1
	}

	return 2
}

// nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2);
func formula7(n int) int {
	if n%10 == 1 && n%100 != 11 {
		return 0
	}
	if n%10 >= 2 && (n%100 < 10 || n%100 >= 20) {
		return 1
	}

	return 2
}

// nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);
func formula8(n int) int {
	if n%10 == 1 && n%100 != 11 {
		return 0
	}
	if n%10 >= 2 && n%10 <= 4 && (n%100 < 10 || n%100 >= 20) {
		return 1
	}

	return 2
}

// nplurals=3; plural=(n==0 ? 0 : n==1 ? 1 : 2);
func formula9(n int) int {
	if n == 0 {
		return 0
	}
	if n == 1 {
		return 1
	}

	return 2
}

// nplurals=3; plural=(n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)) ? 1 : 2);
func formula10(n int) int {
	if n == 1 {
		return 0
	}
	if n == 0 || (n%100 > 0 && n%100 < 20) {
		return 1
	}

	return 2
}

// nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;
func formula11(n int) int {
	if n == 1 {
		return 0
	}
	if n >= 2 && n <= 4 {
		return 1
	}

	return 2
}

// nplurals=3; plural=n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;
func formula12(n int) int {
	if n == 1 {
		return 0
	}
	if n%10 >= 2 && n%10 <= 4 && (n%100 < 10 || n%100 >= 20) {
		return 1
	}

	return 2
}

// nplurals=4; plural= (n==1) ? 0 : (n==2) ? 1 : (n != 8 && n != 11) ? 2 : 3;
func formula13(n int) int {
	if n == 1 {
		return 0
	}
	if n == 2 {
		return 1
	}
	if n != 8 && n != 11 {
		return 2
	}

	return 3
}

// nplurals=4; plural= (n==1) ? 0 : (n==2) ? 1 : (n == 3) ? 2 : 3;
func formula14(n int) int {
	if n == 1 {
		return 0
	}
	if n == 2 {
		return 1
	}
	if n == 3 {
		return 2
	}

	return 3
}

// nplurals=4; plural=(n%100==1 ? 1 : n%100==2 ? 2 : n%100==3 || n%100==4 ? 3 : 0);
func formula15(n int) int {
	if n%100 == 1 {
		return 1
	}
	if n%100 == 2 {
		return 2
	}
	if n%100 == 3 || n%100 == 4 {
		return 3
	}

	return 0
}

// nplurals=4; plural=(n==1 ? 0 : n==0 || ( n%100>1 && n%100<11) ? 1 : (n%100>10 && n%100<20 ) ? 2 : 3);
func formula16(n int) int {
	if n == 1 {
		return 0
	}
	if n == 0 || (n%100 > 1 && n%100 < 11) {
		return 1
	}
	if n%100 > 10 && n%100 < 20 {
		return 2
	}

	return 3
}

// nplurals=4; plural=(n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3;
func formula17(n int) int {
	if n == 1 || n == 11 {
		return 0
	}
	if n == 2 || n == 12 {
		return 1
	}
	if n > 2 && n < 20 {
		return 2
	}

	return 3
}

// nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : 4;
func formula18(n int) int {
	if n == 1 {
		return 0
	}
	if n == 2 {
		return 1
	}
	if n < 7 {
		return 2
	}
	if n < 11 {
		return 3
	}

	return 4
}

// nplurals=6; plural=(n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 ? 4 : 5);
func formula19(n int) int {
	if n == 0 {
		return 0
	}
	if n == 1 {
		return 1
	}
	if n == 2 {
		return 2
	}
	if n%100 >= 3 && n%100 <= 10 {
		return 3
	}
	if n%100 >= 11 {
		return 4
	}

	return 5
}
